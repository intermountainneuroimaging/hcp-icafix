{
  "name": "hcp-icafix",
  "label": "HCP: ICAFIX Functional Pipeline",
  "description": "(HPC Compatible) Runs ICA-FIX denoising on functional data preprocessed according to the HCP Minimal Preprocessing Pipeline. NOTE: This Gear requires that bids-hcp gear version ^1.2.5_4.3.0_inc1.3 has been run, as the outputs of that gear are required inputs here. Note, more than one functional run may be passed as input, and hcp-icafix single run analysis will be used.",
  "author": "FMRIB Software Library (FIX wrapper published by Human Connectome Project) ",
  "maintainer": "Amy Hegarty <amhe4269@colorado.edu>",
  "license": "Other",
  "url": "https://github.com/Washington-University/Pipelines",
  "source": "https://github.com/intermountainneuroimaging/hcp-icafix",
  "cite": "(1) G. Salimi-Khorshidi, G. Douaud, C.F. Beckmann, M.F. Glasser, L. Griffanti S.M. Smith. Automatic denoising of functional MRI data: Combining independent component analysis and hierarchical fusion of classifiers. NeuroImage, 90:449-68, 2014 (2) L. Griffanti, G. Salimi-Khorshidi, C.F. Beckmann, E.J. Auerbach, G. Douaud, C.E. Sexton, E. Zsoldos, K. Ebmeier, N. Filippini, C.E. Mackay, S. Moeller, J.G. Xu, E. Yacoub, G. Baselli, K. Ugurbil, K.L. Miller, and S.M. Smith. ICA-based artefact removal and accelerated fMRI acquisition for improved resting state network imaging. NeuroImage, 95:232-47, 2014",
  "version": "1.06.15_inc1.9.1",
  "custom": {
    "gear-builder": {
      "image": "amhe4269/hcp-icafix:1.06.15_inc1.9.1",
      "category": "analysis"
    },
      "flywheel": {
      "suite": "Denoising"
    }
  },
  "config": {
      "debug": {
        "type": "boolean",
        "default": false,
        "description": "log level debug (TRUE or FALSE)"
      },
      "TrainingFile": {
        "type": "string",
        "default": "HCP_hp2000.RData",
        "enum": ["HCP_hp2000.RData",
                "HCP7T_hp2000.RData",
                "HCP_Style_Single_Multirun_Dedrift.RData",
                "NHPHCP_Macaque_RIKEN30SRFIX.RData",
                "Standard.RData",
                "Standard_old.Rdata",
                "UKBiobank.RData",
                "WhII_MB6.RData",
                "WhII_Standard.RData",
                "User Defined"],
        "description": "Name of FIX training file to use for classification. 'Standard', 'HCP_hp2000', 'HCP7T_hp2000', 'WhII_MB6', 'WhII_Standard', 'UKBiobank'. To use a custom training file, select 'User Defined'. See https://fsl.fmrib.ox.ac.uk/fsl/fslwiki/FIX/UserGuide#Trained-weights_files for details."
      },

      "do_motion_regression": {
        "type": "boolean",
        "default": false,
        "description": "set whether or not to regress motion parameters (24 regressors) out of the data as part of FIX (TRUE or FALSE)"
      },
      "HighPassFilter": {
        "type": "integer",
        "default": 2000,
        "minimum": 1,
        "maximum": 9999,
        "description": "set temporal highpass full-width (2*sigma) to use, in seconds, cannot be 0 for single-run FIX.  For detrending-like behaviour, set <highpass> to 2000"
      },
      "FixThreshold": {
        "type": "integer",
        "default": 10,
        "description": "set FIX threshold (controls sensitivity/specificity tradeoff)"
      },
      "DeleteIntermediates": {
        "type": "boolean",
        "default": false,
        "description": "delete highpass files (note that delete intermediates=TRUE is not recommended for MR+FIX)"
      },
      "DropNonSteadyState": {
        "type": "boolean",
        "default": false,
        "description": "set whether or not to remove XX number of inital non-steady state volumes. If no value is passed in 'DummyVolumes', non-steady state number is taken from mriqc IQMs, if neither are defined, an error will be returned."
      },
      "DummyVolumes": {
        "type": "integer",
        "optional": true,
        "minimum": 0,
        "maximum": 9999,
        "description": "Number of dummy volumes to ignore at the beginning of scan. Leave blank if you want to use the non-steady state volumes recorded in mriqc IQMs."
      },
      "dry-run": {
          "type":"boolean",
          "default": false,
          "description": "Log all commands, but do not execute."
      },
      "gear-writable-dir": {
          "default": "/pl/active/ics/fw_temp_data",
          "description": "Gears expect to be able to write temporary files in /flywheel/v0/.  If this location is not writable (such as when running in Singularity), this path will be used instead.  fMRIPrep creates a large number of files so this disk space should be fast and local.",
          "type": "string"
      },
      "slurm-cpu": {
          "default": "1",
          "description": "[SLURM] How many cpu-cores to request per command/task. This is used for the underlying '--cpus-per-task' option. If not running on HPC, then this flag is ignored",
          "type": "string"
      },
      "slurm-ram": {
          "default": "12G",
          "description": "[SLURM] How much RAM to request. This is used for the underlying '--mem-per-cpu' option. If not running on HPC, then this flag is ignored",
          "type": "string"
      },
      "slurm-ntasks": {
          "default": "1",
          "description": "[SLURM] Total number of tasks/commands across all nodes (not equivalent to neuroimaging tasks). Using a value greater than 1 for code that has not been parallelized will not improve performance (and may break things).",
          "type": "string"
      },
      "slurm-nodes": {
          "default": "1",
          "description": "[SLURM] How many HPC nodes to run on",
          "type": "string"
      },
      "slurm-partition": {
          "default": "blanca-ics",
          "description": "[SLURM] Blanca, Alpine, or Summit partitions can be entered",
          "type": "string"
      },
      "slurm-qos": {
          "default": "blanca-ics",
          "description": "[SLURM] For Blanca the QOS has a different meaning, ie blanca-ics vs blanca-ibg, etc. For Alpine and Summit, the QOS should be set to normal if running a job for 1 day or less, and set to long if running a job with a maximum walltime of 7 days",
          "type": "string"
      },
      "slurm-account": {
          "default": "blanca-ics",
          "description": "[SLURM] For Blanca the ACCOUNT should be set to the sub-account of choice (e.g. blanca-ics-rray). For Alpine, the account should be set to ucb-general, or the specialized account granted by RC: ucb278_asc1",
          "type": "string"
      },
      "slurm-time": {
        "default": "1428",
        "description": "[SLURM] Maximum walltime requested after which your job will be cancelled if it hasn't finished. Default to 1 day",
        "type": "string"
      }
  },
  "inputs": {
    "api-key": {
      "base": "api-key",
      "read-only": true
    },
    "hcp_zip": {
      "description": "HCP minimal preprocessing pipeline output from bids-hcp gear.",
      "base": "file",
      "optional": true
    },
    "custom_training_file": {
      "description": "(Optional) include a custom training file for component classification. For more details see https://fsl.fmrib.ox.ac.uk/fsl/fslwiki/FIX/UserGuide.",
      "base": "file",
      "optional": true
    },
    "previous-results": {
      "description": "(Optional) provide previously generated icafix results. This file should be used to apply a hand-labeled component list or custom training file and create new denoised timeseries.",
      "base": "file",
      "optional": true
    },
    "hand-labeled-noise-components": {
      "description": "(Optional) tab delimited file containing a key for acquisitions where hand labeled noise components should be applied to generate a clean time series. The tab delimited file must contain columns 'subject', 'session', 'acquisition','noiselabels' OR 'flywheel session id', 'acquisition', 'noiselabels'. Noise Labels should be in the format (for example): [1, 4, 99, ... 140] - note that the square brackets, and use of commas, is required. ",
      "base": "file",
      "optional": true
    }
  },
  "environment": {
    "CARET7DIR": "/opt/workbench/bin_linux64",
    "FLYWHEEL": "/flywheel/v0",
    "FMRI_ANALYSIS_DIR": "/opt/freesurfer/fsfast",
    "FREESURFER_HOME": "/opt/freesurfer",
    "FSFAST_HOME": "/opt/freesurfer/fsfast",
    "FSF_OUTPUT_FORMAT": "nii.gz",
    "FSLDIR": "/usr/share/fsl",
    "FSLMULTIFILEQUIT": "TRUE",
    "FSLOUTPUTTYPE": "NIFTI_GZ",
    "FSLTCLSH": "/usr/bin/tclsh",
    "FSLWISH": "/usr/bin/wish",
    "FSL_DIR": "/usr/share/fsl",
    "FSL_PYTHON": "${FSLDIR}/fslpython/envs/fslpython",
    "FS_OVERRIDE": "0",
    "HCPPIPEDIR": "/opt/HCP-Pipelines",
    "HCPPIPEDIR_Bin": "/opt/HCP-Pipelines/global/binaries",
    "HCPPIPEDIR_Config": "/opt/HCP-Pipelines/global/config",
    "HCPPIPEDIR_FS": "/opt/HCP-Pipelines/FreeSurfer/scripts",
    "HCPPIPEDIR_Global": "/opt/HCP-Pipelines/global/scripts",
    "HCPPIPEDIR_PostFS": "/opt/HCP-Pipelines/PostFreeSurfer/scripts",
    "HCPPIPEDIR_PreFS": "/opt/HCP-Pipelines/PreFreeSurfer/scripts",
    "HCPPIPEDIR_Templates": "/opt/HCP-Pipelines/global/templates",
    "HCPPIPEDIR_dMRI": "/opt/HCP-Pipelines/DiffusionPreprocessing/scripts",
    "HCPPIPEDIR_dMRITract": "/opt/HCP-Pipelines/DiffusionTractography/scripts",
    "HCPPIPEDIR_fMRIVol": "/opt/HCP-Pipelines/fMRIVolume/scripts",
    "HCPPIPEDIR_tfMRI": "/opt/HCP-Pipelines/tfMRI/scripts",
    "HCPPIPEDIR_tfMRIAnalysis": "/opt/HCP-Pipelines/TaskfMRIAnalysis/scripts",
    "LD_LIBRARY_PATH": "/usr/share/fsl/lib:/usr/share/fsl/lib",
    "LOCAL_DIR": "/opt/freesurfer/local",
    "MINC_BIN_DIR": "/opt/freesurfer/mni/bin",
    "MINC_LIB_DIR": "/opt/freesurfer/mni/lib",
    "MNI_DATAPATH": "/opt/freesurfer/mni/data",
    "MNI_DIR": "/opt/freesurfer/mni",
    "MNI_PERL5LIB": "/opt/freesurfer/mni/lib/perl5/5.8.5",
    "MSMBINDIR": "/opt/HCP-Pipelines/MSMBinaries",
    "MSMBin": "/opt/HCP-Pipelines/MSMBinaries",
    "MSMCONFIGDIR": "/opt/HCP-Pipelines/MSMConfig",
    "PATH": "/opt/fix:/opt/poetry/bin:/opt/workbench/bin_linux64:/opt/venv/bin:/opt/freesurfer/bin:/opt/freesurfer/fsfast/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/share/fsl/bin:/opt/freesurfer/tktools:/opt/freesurfer/mni/bin",
    "PERL5LIB": "/opt/freesurfer/mni/lib/perl5/5.8.5",
    "POETRY_HOME": "/opt/poetry",
    "POSSUMDIR": "/usr/share/fsl",
    "REQUESTS_CA_BUNDLE": "/etc/ssl/certs/ca-certificates.crt",
    "SUBJECTS_DIR": "/opt/freesurfer/subjects",
    "WORKBENCH": "/opt/workbench/wb_command",
    "python3": "/opt/venv/bin/python3",
    "python": "/opt/venv/bin/python",
    "FSL_FIXDIR": "/opt/fix",
    "FSL_FIX_CIFTIRW": "/opt/HCP-Pipelines/global/matlab/",
    "FSL_FIX_WBC": "/opt/workbench/bin_linux64/wb_command"
  },
  "command": "/flywheel/v0/run.py"
}
