[[package]]
name = "appdirs"
version = "1.4.4"
description = "A small Python module for determining appropriate platform-specific dirs, e.g. a \"user data dir\"."
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "astroid"
version = "2.15.6"
description = "An abstract syntax tree for Python with inference support."
category = "dev"
optional = false
python-versions = ">=3.7.2"

[package.dependencies]
lazy-object-proxy = ">=1.4.0"
typing-extensions = {version = ">=4.0.0", markers = "python_version < \"3.11\""}
wrapt = [
    {version = ">=1.11,<2", markers = "python_version < \"3.11\""},
    {version = ">=1.14,<2", markers = "python_version >= \"3.11\""},
]

[[package]]
name = "atomicwrites"
version = "1.4.1"
description = "Atomic file writes."
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "attrs"
version = "23.1.0"
description = "Classes Without Boilerplate"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
cov = ["attrs", "coverage[toml] (>=5.3)"]
dev = ["attrs", "pre-commit"]
docs = ["furo", "myst-parser", "sphinx", "sphinx-notfound-page", "sphinxcontrib-towncrier", "towncrier", "zope-interface"]
tests = ["attrs", "zope-interface"]
tests-no-zope = ["cloudpickle", "hypothesis", "mypy (>=1.1.1)", "pympler", "pytest-mypy-plugins", "pytest-xdist", "pytest (>=4.3.0)"]

[[package]]
name = "backports.zoneinfo"
version = "0.2.1"
description = "Backport of the standard library zoneinfo module"
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
tzdata = ["tzdata"]

[[package]]
name = "black"
version = "20.8b1"
description = "The uncompromising code formatter."
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
appdirs = "*"
click = ">=7.1.2"
mypy-extensions = ">=0.4.3"
pathspec = ">=0.6,<1"
regex = ">=2020.1.8"
toml = ">=0.10.1"
typed-ast = ">=1.4.0"
typing-extensions = ">=3.7.4"

[package.extras]
colorama = ["colorama (>=0.4.3)"]
d = ["aiohttp (>=3.3.2)", "aiohttp-cors"]

[[package]]
name = "certifi"
version = "2023.7.22"
description = "Python package for providing Mozilla's CA Bundle."
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "charset-normalizer"
version = "3.2.0"
description = "The Real First Universal Charset Detector. Open, modern and actively maintained alternative to Chardet."
category = "main"
optional = false
python-versions = ">=3.7.0"

[[package]]
name = "ci-info"
version = "0.3.0"
description = "Continuous Integration Information"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
all = ["pytest"]
test = ["pytest"]
tests = ["pytest"]

[[package]]
name = "click"
version = "8.1.7"
description = "Composable command line interface toolkit"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
colorama = {version = "*", markers = "platform_system == \"Windows\""}

[[package]]
name = "colorama"
version = "0.4.6"
description = "Cross-platform colored terminal text."
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*,>=2.7"

[[package]]
name = "coverage"
version = "5.5"
description = "Code coverage measurement for Python"
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4"

[package.dependencies]
toml = {version = "*", optional = true, markers = "extra == \"toml\""}

[package.extras]
toml = ["toml"]

[[package]]
name = "dicom-validator"
version = "0.3.5"
description = "Python DICOM tools using input from DICOM specs in docbook format"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
pydicom = "*"

[[package]]
name = "dill"
version = "0.3.7"
description = "serialize all of Python"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.extras]
graph = ["objgraph (>=1.7.2)"]

[[package]]
name = "dotty-dict"
version = "1.3.1"
description = "Dictionary wrapper for quick access to deeply nested keys."
category = "main"
optional = false
python-versions = ">=3.5,<4.0"

[[package]]
name = "errorhandler"
version = "2.0.1"
description = "A logging framework handler that tracks when messages above a certain level have been logged."
category = "main"
optional = false
python-versions = "*"

[package.extras]
build = ["pkginfo", "setuptools-git", "sphinx", "twine", "wheel"]
test = ["coveralls", "nose", "nose-cov", "nose-fixes"]

[[package]]
name = "etelemetry"
version = "0.3.0"
description = "Etelemetry python client API"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
ci-info = ">=0.2"
requests = "*"

[package.extras]
all = ["pytest", "pytest-cov", "codecov"]
test = ["pytest", "pytest-cov", "codecov"]
tests = ["pytest", "pytest-cov", "codecov"]

[[package]]
name = "filelock"
version = "3.12.3"
description = "A platform independent file lock."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
typing-extensions = {version = ">=4.7.1", markers = "python_version < \"3.11\""}

[package.extras]
docs = ["furo (>=2023.7.26)", "sphinx-autodoc-typehints (>=1.24)", "sphinx (>=7.1.2)"]
testing = ["covdefaults (>=2.3)", "coverage (>=7.3)", "diff-cover (>=7.7)", "pytest-cov (>=4.1)", "pytest-mock (>=3.11.1)", "pytest-timeout (>=2.1)", "pytest (>=7.4)"]

[[package]]
name = "flywheel-bids"
version = "1.0.4"
description = "Flywheel BIDS Client"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
flywheel-sdk = ">=14.6.3"
future = ">=0.18.2"
jsonschema = ">=3.2.0"
rtstatlib = ">=1.0.0"
urllib3 = ">=1.26.4"

[[package]]
name = "flywheel-gear-toolkit"
version = "0.6.8"
description = "Tooling for developing Flywheel gears"
category = "main"
optional = false
python-versions = ">=3.7,<4.0"

[package.dependencies]
"backports.zoneinfo" = {version = ">=0.2.1,<0.3.0", markers = "python_version == \"3.8\""}
dotty-dict = ">=1.2.1,<2.0.0"
flywheel-bids = {version = ">=1.0.4,<2.0.0", optional = true, markers = "extra == \"all\" or extra == \"sdk\""}
flywheel-gears = ">=0.2,<0.3"
flywheel-sdk = {version = ">=14.2.0", optional = true, markers = "extra == \"all\" or extra == \"sdk\""}
fw-file = {version = ">=1,<2", optional = true, markers = "extra == \"all\" or extra == \"fw-file\" or extra == \"dicom\""}
fw-meta = ">=2,<3"
jsonschema = ">=3.2.0,<4.0.0"
nibabel = {version = ">=3.2.1,<4.0.0", optional = true, markers = "extra == \"all\" or extra == \"dicom\" or extra == \"nipype\""}
nipype = {version = ">=1.6,<2.0", optional = true, markers = "extra == \"all\" or extra == \"nipype\""}
numpy = {version = ">=1,<2", optional = true, markers = "extra == \"all\" or extra == \"numpy\""}
pydantic = ">=1.8.1,<2.0.0"

[package.extras]
all = ["flywheel-sdk (>=14.2.0)", "flywheel-bids (>=1.0.4,<2.0.0)", "numpy (>=1,<2)", "fw-file (>=1,<2)", "nipype (>=1.6,<2.0)", "nibabel (>=3.2.1,<4.0.0)"]
sdk = ["flywheel-sdk (>=14.2.0)", "flywheel-bids (>=1.0.4,<2.0.0)"]
numpy = ["numpy (>=1,<2)"]
fw-file = ["fw-file (>=1,<2)"]
dicom = ["fw-file (>=1,<2)", "nibabel (>=3.2.1,<4.0.0)"]
nipype = ["nipype (>=1.6,<2.0)", "nibabel (>=3.2.1,<4.0.0)"]

[[package]]
name = "flywheel-gears"
version = "0.2.1"
description = "Flywheel Gear tools"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
jsonschema = ">=2.5.1"
rfc3987 = ">=1.3.7"

[[package]]
name = "flywheel-sdk"
version = "15.8.0"
description = "Flywheel SDK"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
certifi = "*"
python-dateutil = "*"
requests = ">=2.18.4"
requests-toolbelt = "*"
six = ">=1.10"
urllib3 = ">=1.15"

[[package]]
name = "future"
version = "0.18.3"
description = "Clean single-source support for Python 3 and 2"
category = "main"
optional = false
python-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "fw-file"
version = "1.4.2"
description = "Unified data-file interface"
category = "main"
optional = false
python-versions = ">=3.8,<4.0"

[package.dependencies]
dicom-validator = ">=0.3.4,<0.4.0"
fw-meta = ">=2.0.7,<3.0.0"
fw-utils = ">=3,<5"
memoization = ">=0,<1"
natsort = ">=8.0.0,<9.0.0"
pydantic = ">=1.7.3,<2.0.0"
pydicom = ">=2.3.0,<3.0.0"
python-dateutil = ">=2.8.1,<3.0.0"
pyyaml = ">=5.4.1"

[package.extras]
all = ["nibabel (>=4.0.2,<5.0.0)", "piexif (>=1.1.3,<2.0.0)", "pillow (>=9,<10)", "pypng (>=0,<1)"]
nifti = ["nibabel (>=4.0.2,<5.0.0)"]
jpg = ["piexif (>=1.1.3,<2.0.0)", "pillow (>=9,<10)"]
png = ["piexif (>=1.1.3,<2.0.0)", "pillow (>=9,<10)", "pypng (>=0,<1)"]

[[package]]
name = "fw-meta"
version = "2.1.1"
description = "Flywheel metadata extraction."
category = "main"
optional = false
python-versions = ">=3.8,<4.0"

[package.dependencies]
fw-utils = ">=3,<5"
pathvalidate = ">=2.3.2,<3.0.0"
pydantic = ">=1.7.3,<2.0.0"

[[package]]
name = "fw-utils"
version = "4.3.5"
description = "Common Flywheel helper utilities."
category = "main"
optional = false
python-versions = ">=3.8,<4.0"

[package.dependencies]
python-dateutil = ">=2.8.2,<3.0.0"
tzdata = ">=2022"
tzlocal = ">=4.1"

[[package]]
name = "idna"
version = "3.4"
description = "Internationalized Domain Names in Applications (IDNA)"
category = "main"
optional = false
python-versions = ">=3.5"

[[package]]
name = "iniconfig"
version = "2.0.0"
description = "brain-dead simple config-ini parsing"
category = "dev"
optional = false
python-versions = ">=3.7"

[[package]]
name = "isodate"
version = "0.6.1"
description = "An ISO 8601 date/time/duration parser and formatter"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
six = "*"

[[package]]
name = "isort"
version = "5.12.0"
description = "A Python utility / library to sort Python imports."
category = "dev"
optional = false
python-versions = ">=3.8.0"

[package.extras]
colors = ["colorama (>=0.4.3)"]
requirements-deprecated-finder = ["pip-api", "pipreqs"]
pipfile-deprecated-finder = ["pip-shims (>=0.5.2)", "pipreqs", "requirementslib"]
plugins = ["setuptools"]

[[package]]
name = "jsonschema"
version = "3.2.0"
description = "An implementation of JSON Schema validation for Python"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
attrs = ">=17.4.0"
pyrsistent = ">=0.14.0"
six = ">=1.11.0"

[package.extras]
format = ["idna", "jsonpointer (>1.13)", "rfc3987", "strict-rfc3339", "webcolors"]
format_nongpl = ["idna", "jsonpointer (>1.13)", "webcolors", "rfc3986-validator (>0.1.0)", "rfc3339-validator"]

[[package]]
name = "lazy-object-proxy"
version = "1.9.0"
description = "A fast and thorough lazy object proxy."
category = "dev"
optional = false
python-versions = ">=3.7"

[[package]]
name = "looseversion"
version = "1.3.0"
description = "Version numbering for anarchists and software realists"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "lxml"
version = "4.9.3"
description = "Powerful and Pythonic XML processing library combining libxml2/libxslt with the ElementTree API."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, != 3.4.*"

[package.extras]
cssselect = ["cssselect (>=0.7)"]
html5 = ["html5lib"]
htmlsoup = ["beautifulsoup4"]
source = ["Cython (>=0.29.35)"]

[[package]]
name = "mccabe"
version = "0.7.0"
description = "McCabe checker, plugin for flake8"
category = "dev"
optional = false
python-versions = ">=3.6"

[[package]]
name = "memoization"
version = "0.4.0"
description = "A powerful caching library for Python, with TTL support and multiple algorithm options. (https://github.com/lonelyenvoy/python-memoization)"
category = "main"
optional = false
python-versions = ">=3, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4"

[[package]]
name = "mypy"
version = "0.961"
description = "Optional static typing for Python"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
mypy-extensions = ">=0.4.3"
tomli = {version = ">=1.1.0", markers = "python_version < \"3.11\""}
typing-extensions = ">=3.10"

[package.extras]
dmypy = ["psutil (>=4.0)"]
python2 = ["typed-ast (>=1.4.0,<2)"]
reports = ["lxml"]

[[package]]
name = "mypy-extensions"
version = "1.0.0"
description = "Type system extensions for programs checked with the mypy type checker."
category = "dev"
optional = false
python-versions = ">=3.5"

[[package]]
name = "natsort"
version = "8.4.0"
description = "Simple yet flexible natural sorting in Python."
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
fast = ["fastnumbers (>=2.0.0)"]
icu = ["PyICU (>=1.0.0)"]

[[package]]
name = "networkx"
version = "3.1"
description = "Python package for creating and manipulating graphs and networks"
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
default = ["numpy (>=1.20)", "scipy (>=1.8)", "matplotlib (>=3.4)", "pandas (>=1.3)"]
developer = ["pre-commit (>=3.2)", "mypy (>=1.1)"]
doc = ["sphinx (>=6.1)", "pydata-sphinx-theme (>=0.13)", "sphinx-gallery (>=0.12)", "numpydoc (>=1.5)", "pillow (>=9.4)", "nb2plots (>=0.6)", "texext (>=0.6.7)"]
extra = ["lxml (>=4.6)", "pygraphviz (>=1.10)", "pydot (>=1.4.2)", "sympy (>=1.10)"]
test = ["pytest (>=7.2)", "pytest-cov (>=4.0)", "codecov (>=2.1)"]

[[package]]
name = "nibabel"
version = "3.2.2"
description = "Access a multitude of neuroimaging data formats"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
numpy = ">=1.14"
packaging = ">=14.3"

[package.extras]
all = ["pydicom (>=1.0.0)", "pillow", "gitpython", "twine", "matplotlib (>=1.5.3)", "numpydoc", "sphinx (>=0.3,<3)", "texext", "h5py", "scipy", "flake8", "coverage", "pytest (!=5.3.4)", "pytest-cov", "pytest-doctestplus (!=0.9.0)", "pytest (<7)"]
dev = ["gitpython", "twine"]
dicom = ["pydicom (>=1.0.0)"]
dicomfs = ["pydicom (>=1.0.0)", "pillow"]
doc = ["matplotlib (>=1.5.3)", "numpydoc", "sphinx (>=0.3,<3)", "texext"]
minc2 = ["h5py"]
spm = ["scipy"]
style = ["flake8"]
test = ["coverage", "pytest (!=5.3.4)", "pytest-cov", "pytest-doctestplus (!=0.9.0)", "pytest (<7)"]

[[package]]
name = "nipype"
version = "1.8.6"
description = "Neuroimaging in Python: Pipelines and Interfaces"
category = "main"
optional = false
python-versions = ">= 3.7"

[package.dependencies]
click = ">=6.6.0"
etelemetry = ">=0.2.0"
filelock = ">=3.0.0"
looseversion = "*"
networkx = ">=2.0"
nibabel = ">=2.1.0"
numpy = ">=1.17"
packaging = "*"
prov = ">=1.5.2"
pydot = ">=1.2.3"
python-dateutil = ">=2.2"
rdflib = ">=5.0.0"
scipy = ">=0.14"
simplejson = ">=3.8.0"
traits = ">=4.6,<5.0 || >5.0,<6.4"

[package.extras]
all = ["codecov", "ipython", "matplotlib", "nbsphinx", "dipy", "pytest-cov", "sphinx-argparse", "paramiko", "duecredit", "coverage (<5)", "sphinx (>=2.1.2)", "xvfbwrapper", "fuzzywuzzy", "nitime", "pytest", "pytest-doctestplus", "black", "pytest-env", "datalad", "pytest-timeout", "gitpython", "psutil (>=5.0)", "nipy", "sphinx", "sphinxcontrib-apidoc", "nilearn", "pybids (>=0.7.0)"]
data = ["datalad"]
dev = ["codecov", "pytest", "pytest-doctestplus", "black", "ipython", "coverage (<5)", "sphinx", "matplotlib", "sphinxcontrib-apidoc", "pytest-env", "nbsphinx", "dipy", "pytest-cov", "pytest-timeout", "sphinx (>=2.1.2)", "sphinx-argparse"]
doc = ["dipy", "ipython", "matplotlib", "nbsphinx", "sphinx-argparse", "sphinx (>=2.1.2)", "sphinxcontrib-apidoc"]
duecredit = ["duecredit"]
maint = ["gitpython", "fuzzywuzzy"]
nipy = ["nitime", "nilearn", "dipy", "nipy", "matplotlib"]
profiler = ["psutil (>=5.0)"]
pybids = ["pybids (>=0.7.0)"]
specs = ["black"]
ssh = ["paramiko"]
tests = ["codecov", "coverage (<5)", "pytest", "pytest-cov", "pytest-env", "pytest-timeout", "pytest-doctestplus", "sphinx"]
xvfbwrapper = ["xvfbwrapper"]

[[package]]
name = "numpy"
version = "1.24.4"
description = "Fundamental package for array computing in Python"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "packaging"
version = "23.1"
description = "Core utilities for Python packages"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "pandas"
version = "2.0.3"
description = "Powerful data structures for data analysis, time series, and statistics"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
numpy = [
    {version = ">=1.20.3", markers = "python_version < \"3.10\""},
    {version = ">=1.21.0", markers = "python_version >= \"3.10\""},
    {version = ">=1.23.2", markers = "python_version >= \"3.11\""},
]
python-dateutil = ">=2.8.2"
pytz = ">=2020.1"
tzdata = ">=2022.1"

[package.extras]
all = ["beautifulsoup4 (>=4.9.3)", "bottleneck (>=1.3.2)", "brotlipy (>=0.7.0)", "fastparquet (>=0.6.3)", "fsspec (>=2021.07.0)", "gcsfs (>=2021.07.0)", "html5lib (>=1.1)", "hypothesis (>=6.34.2)", "jinja2 (>=3.0.0)", "lxml (>=4.6.3)", "matplotlib (>=3.6.1)", "numba (>=0.53.1)", "numexpr (>=2.7.3)", "odfpy (>=1.4.1)", "openpyxl (>=3.0.7)", "pandas-gbq (>=0.15.0)", "psycopg2 (>=2.8.6)", "pyarrow (>=7.0.0)", "pymysql (>=1.0.2)", "PyQt5 (>=5.15.1)", "pyreadstat (>=1.1.2)", "pytest (>=7.3.2)", "pytest-xdist (>=2.2.0)", "pytest-asyncio (>=0.17.0)", "python-snappy (>=0.6.0)", "pyxlsb (>=1.0.8)", "qtpy (>=2.2.0)", "scipy (>=1.7.1)", "s3fs (>=2021.08.0)", "SQLAlchemy (>=1.4.16)", "tables (>=3.6.1)", "tabulate (>=0.8.9)", "xarray (>=0.21.0)", "xlrd (>=2.0.1)", "xlsxwriter (>=1.4.3)", "zstandard (>=0.15.2)"]
aws = ["s3fs (>=2021.08.0)"]
clipboard = ["PyQt5 (>=5.15.1)", "qtpy (>=2.2.0)"]
compression = ["brotlipy (>=0.7.0)", "python-snappy (>=0.6.0)", "zstandard (>=0.15.2)"]
computation = ["scipy (>=1.7.1)", "xarray (>=0.21.0)"]
excel = ["odfpy (>=1.4.1)", "openpyxl (>=3.0.7)", "pyxlsb (>=1.0.8)", "xlrd (>=2.0.1)", "xlsxwriter (>=1.4.3)"]
feather = ["pyarrow (>=7.0.0)"]
fss = ["fsspec (>=2021.07.0)"]
gcp = ["gcsfs (>=2021.07.0)", "pandas-gbq (>=0.15.0)"]
hdf5 = ["tables (>=3.6.1)"]
html = ["beautifulsoup4 (>=4.9.3)", "html5lib (>=1.1)", "lxml (>=4.6.3)"]
mysql = ["SQLAlchemy (>=1.4.16)", "pymysql (>=1.0.2)"]
output_formatting = ["jinja2 (>=3.0.0)", "tabulate (>=0.8.9)"]
parquet = ["pyarrow (>=7.0.0)"]
performance = ["bottleneck (>=1.3.2)", "numba (>=0.53.1)", "numexpr (>=2.7.1)"]
plot = ["matplotlib (>=3.6.1)"]
postgresql = ["SQLAlchemy (>=1.4.16)", "psycopg2 (>=2.8.6)"]
spss = ["pyreadstat (>=1.1.2)"]
sql-other = ["SQLAlchemy (>=1.4.16)"]
test = ["hypothesis (>=6.34.2)", "pytest (>=7.3.2)", "pytest-xdist (>=2.2.0)", "pytest-asyncio (>=0.17.0)"]
xml = ["lxml (>=4.6.3)"]

[[package]]
name = "pathspec"
version = "0.11.2"
description = "Utility library for gitignore style pattern matching of file paths."
category = "dev"
optional = false
python-versions = ">=3.7"

[[package]]
name = "pathvalidate"
version = "2.5.2"
description = "pathvalidate is a Python library to sanitize/validate a string such as filenames/file-paths/etc."
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
test = ["allpairspy", "click", "faker", "pytest (>=6.0.1)", "pytest-discord (>=0.0.6)", "pytest-md-report (>=0.0.12)"]

[[package]]
name = "platformdirs"
version = "3.10.0"
description = "A small Python package for determining appropriate platform-specific dirs, e.g. a \"user data dir\"."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.extras]
docs = ["furo (>=2023.7.26)", "proselint (>=0.13)", "sphinx-autodoc-typehints (>=1.24)", "sphinx (>=7.1.1)"]
test = ["appdirs (==1.4.4)", "covdefaults (>=2.3)", "pytest-cov (>=4.1)", "pytest-mock (>=3.11.1)", "pytest (>=7.4)"]

[[package]]
name = "pluggy"
version = "1.3.0"
description = "plugin and hook calling mechanisms for python"
category = "dev"
optional = false
python-versions = ">=3.8"

[package.extras]
dev = ["pre-commit", "tox"]
testing = ["pytest", "pytest-benchmark"]

[[package]]
name = "prov"
version = "2.0.0"
description = "A library for W3C Provenance Data Model supporting PROV-JSON, PROV-XML and PROV-O (RDF)"
category = "main"
optional = false
python-versions = ">=3.6, <4"

[package.dependencies]
lxml = ">=3.3.5"
networkx = ">=2.0"
python-dateutil = ">=2.2"
rdflib = ">=4.2.1"

[package.extras]
dot = ["pydot (>=1.2.0)"]

[[package]]
name = "py"
version = "1.11.0"
description = "library with cross-python path, ini-parsing, io, code, log facilities"
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[[package]]
name = "pycodestyle"
version = "2.11.0"
description = "Python style guide checker"
category = "dev"
optional = false
python-versions = ">=3.8"

[[package]]
name = "pydantic"
version = "1.10.12"
description = "Data validation and settings management using python type hints"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
typing-extensions = ">=4.2.0"

[package.extras]
dotenv = ["python-dotenv (>=0.10.4)"]
email = ["email-validator (>=1.0.3)"]

[[package]]
name = "pydicom"
version = "2.4.3"
description = "A pure Python package for reading and writing DICOM data"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
docs = ["numpy", "numpydoc", "matplotlib", "pillow", "sphinx", "sphinx-rtd-theme", "sphinx-gallery", "sphinxcontrib-napoleon", "sphinx-copybutton"]

[[package]]
name = "pydocstyle"
version = "5.1.1"
description = "Python docstring style checker"
category = "dev"
optional = false
python-versions = ">=3.5"

[package.dependencies]
snowballstemmer = "*"

[[package]]
name = "pydot"
version = "1.4.2"
description = "Python interface to Graphviz's Dot"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[package.dependencies]
pyparsing = ">=2.1.4"

[[package]]
name = "pylint"
version = "2.17.5"
description = "python code static checker"
category = "dev"
optional = false
python-versions = ">=3.7.2"

[package.dependencies]
astroid = ">=2.15.6,<=2.17.0-dev0"
colorama = {version = ">=0.4.5", markers = "sys_platform == \"win32\""}
dill = [
    {version = ">=0.2", markers = "python_version < \"3.11\""},
    {version = ">=0.3.6", markers = "python_version >= \"3.11\""},
]
isort = ">=4.2.5,<6"
mccabe = ">=0.6,<0.8"
platformdirs = ">=2.2.0"
tomli = {version = ">=1.1.0", markers = "python_version < \"3.11\""}
tomlkit = ">=0.10.1"
typing-extensions = {version = ">=3.10.0", markers = "python_version < \"3.10\""}

[package.extras]
spelling = ["pyenchant (>=3.2,<4.0)"]
testutils = ["gitpython (>3)"]

[[package]]
name = "pyparsing"
version = "3.1.1"
description = "pyparsing module - Classes and methods to define and execute parsing grammars"
category = "main"
optional = false
python-versions = ">=3.6.8"

[package.extras]
diagrams = ["railroad-diagrams", "jinja2"]

[[package]]
name = "pyrsistent"
version = "0.19.3"
description = "Persistent/Functional/Immutable data structures"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "pytest"
version = "6.2.5"
description = "pytest: simple powerful testing with Python"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
atomicwrites = {version = ">=1.0", markers = "sys_platform == \"win32\""}
attrs = ">=19.2.0"
colorama = {version = "*", markers = "sys_platform == \"win32\""}
iniconfig = "*"
packaging = "*"
pluggy = ">=0.12,<2.0"
py = ">=1.8.2"
toml = "*"

[package.extras]
testing = ["argcomplete", "hypothesis (>=3.56)", "mock", "nose", "requests", "xmlschema"]

[[package]]
name = "pytest-cov"
version = "2.12.1"
description = "Pytest plugin for measuring coverage."
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[package.dependencies]
coverage = ">=5.2.1"
pytest = ">=4.6"
toml = "*"

[package.extras]
testing = ["fields", "hunter", "process-tests", "six", "pytest-xdist", "virtualenv"]

[[package]]
name = "pytest-mock"
version = "3.11.1"
description = "Thin-wrapper around the mock package for easier use with pytest"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
pytest = ">=5.0"

[package.extras]
dev = ["pre-commit", "tox", "pytest-asyncio"]

[[package]]
name = "python-dateutil"
version = "2.8.2"
description = "Extensions to the standard Python datetime module"
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,>=2.7"

[package.dependencies]
six = ">=1.5"

[[package]]
name = "pytz"
version = "2023.3.post1"
description = "World timezone definitions, modern and historical"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pyyaml"
version = "6.0.1"
description = "YAML parser and emitter for Python"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "rdflib"
version = "6.3.2"
description = "RDFLib is a Python library for working with RDF, a simple yet powerful language for representing information."
category = "main"
optional = false
python-versions = ">=3.7,<4.0"

[package.dependencies]
isodate = ">=0.6.0,<0.7.0"
pyparsing = ">=2.1.0,<4"

[package.extras]
berkeleydb = ["berkeleydb (>=18.1.0,<19.0.0)"]
networkx = ["networkx (>=2.0.0,<3.0.0)"]
html = ["html5lib (>=1.0,<2.0)"]
lxml = ["lxml (>=4.3.0,<5.0.0)"]

[[package]]
name = "regex"
version = "2023.8.8"
description = "Alternative regular expression module, to replace re."
category = "dev"
optional = false
python-versions = ">=3.6"

[[package]]
name = "requests"
version = "2.31.0"
description = "Python HTTP for Humans."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
certifi = ">=2017.4.17"
charset-normalizer = ">=2,<4"
idna = ">=2.5,<4"
urllib3 = ">=1.21.1,<3"

[package.extras]
socks = ["PySocks (>=1.5.6,!=1.5.7)"]
use_chardet_on_py3 = ["chardet (>=3.0.2,<6)"]

[[package]]
name = "requests-toolbelt"
version = "1.0.0"
description = "A utility belt for advanced users of python-requests"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[package.dependencies]
requests = ">=2.0.1,<3.0.0"

[[package]]
name = "rfc3987"
version = "1.3.8"
description = "Parsing and validation of URIs (RFC 3986) and IRIs (RFC 3987)"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "rtstatlib"
version = "1.0.0"
description = "Runtime Status Library"
category = "main"
optional = false
python-versions = ">=3.0"

[[package]]
name = "scipy"
version = "1.9.3"
description = "Fundamental algorithms for scientific computing in Python"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
numpy = ">=1.18.5,<1.26.0"

[package.extras]
test = ["pytest", "pytest-cov", "pytest-xdist", "asv", "mpmath", "gmpy2", "threadpoolctl", "scikit-umfpack"]
doc = ["sphinx (!=4.1.0)", "pydata-sphinx-theme (==0.9.0)", "sphinx-panels (>=0.5.2)", "matplotlib (>2)", "numpydoc", "sphinx-tabs"]
dev = ["mypy", "typing-extensions", "pycodestyle", "flake8"]

[[package]]
name = "simplejson"
version = "3.19.1"
description = "Simple, fast, extensible JSON encoder/decoder for Python"
category = "main"
optional = false
python-versions = ">=2.5, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "six"
version = "1.16.0"
description = "Python 2 and 3 compatibility utilities"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "snowballstemmer"
version = "2.2.0"
description = "This package provides 29 stemmers for 28 languages generated from Snowball algorithms."
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "toml"
version = "0.10.2"
description = "Python Library for Tom's Obvious, Minimal Language"
category = "dev"
optional = false
python-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "tomli"
version = "2.0.1"
description = "A lil' TOML parser"
category = "dev"
optional = false
python-versions = ">=3.7"

[[package]]
name = "tomlkit"
version = "0.12.1"
description = "Style preserving TOML library"
category = "dev"
optional = false
python-versions = ">=3.7"

[[package]]
name = "traits"
version = "6.3.2"
description = "Observable typed attributes for Python classes"
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
docs = ["enthought-sphinx-theme", "Sphinx (>=2.1.0,!=3.2.0)"]
examples = ["numpy", "pillow"]
test = ["cython", "flake8", "flake8-ets", "mypy", "pyface", "setuptools", "Sphinx (>=2.1.0,!=3.2.0)", "traitsui", "numpy", "pyside2"]

[[package]]
name = "typed-ast"
version = "1.5.5"
description = "a fork of Python 2 and 3 ast modules with type comment support"
category = "dev"
optional = false
python-versions = ">=3.6"

[[package]]
name = "typing-extensions"
version = "4.7.1"
description = "Backported and Experimental Type Hints for Python 3.7+"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "tzdata"
version = "2023.3"
description = "Provider of IANA time zone data"
category = "main"
optional = false
python-versions = ">=2"

[[package]]
name = "tzlocal"
version = "5.0.1"
description = "tzinfo object for the local timezone"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
"backports.zoneinfo" = {version = "*", markers = "python_version < \"3.9\""}
tzdata = {version = "*", markers = "platform_system == \"Windows\""}

[package.extras]
devenv = ["black", "check-manifest", "flake8", "pyroma", "pytest-cov", "pytest-mock (>=3.3)", "pytest (>=4.3)", "zest.releaser"]

[[package]]
name = "urllib3"
version = "2.0.4"
description = "HTTP library with thread-safe connection pooling, file post, and more."
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
brotli = ["brotli (>=1.0.9)", "brotlicffi (>=0.8.0)"]
secure = ["certifi", "cryptography (>=1.9)", "idna (>=2.0.0)", "pyopenssl (>=17.1.0)", "urllib3-secure-extra"]
socks = ["pysocks (>=1.5.6,!=1.5.7,<2.0)"]
zstd = ["zstandard (>=0.18.0)"]

[[package]]
name = "wrapt"
version = "1.15.0"
description = "Module for decorators, wrappers and monkey patching."
category = "dev"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,>=2.7"

[metadata]
lock-version = "1.1"
python-versions = "^3.8"
content-hash = "4cfa0fd3d6701485c7b5b3d13b2405894aed65124f0958a3a2b9b24043f4912b"

[metadata.files]
appdirs = []
astroid = []
atomicwrites = []
attrs = []
"backports.zoneinfo" = []
black = []
certifi = []
charset-normalizer = []
ci-info = []
click = []
colorama = []
coverage = []
dicom-validator = []
dill = []
dotty-dict = []
errorhandler = []
etelemetry = []
filelock = []
flywheel-bids = []
flywheel-gear-toolkit = []
flywheel-gears = []
flywheel-sdk = []
future = []
fw-file = []
fw-meta = []
fw-utils = []
idna = []
iniconfig = []
isodate = []
isort = []
jsonschema = []
lazy-object-proxy = []
looseversion = []
lxml = []
mccabe = []
memoization = []
mypy = []
mypy-extensions = []
natsort = []
networkx = []
nibabel = []
nipype = []
numpy = []
packaging = []
pandas = []
pathspec = []
pathvalidate = []
platformdirs = []
pluggy = []
prov = []
py = []
pycodestyle = []
pydantic = []
pydicom = []
pydocstyle = []
pydot = []
pylint = []
pyparsing = []
pyrsistent = []
pytest = []
pytest-cov = []
pytest-mock = []
python-dateutil = []
pytz = []
pyyaml = []
rdflib = []
regex = []
requests = []
requests-toolbelt = []
rfc3987 = []
rtstatlib = []
scipy = []
simplejson = []
six = []
snowballstemmer = []
toml = []
tomli = []
tomlkit = []
traits = []
typed-ast = []
typing-extensions = []
tzdata = []
tzlocal = []
urllib3 = []
wrapt = []
